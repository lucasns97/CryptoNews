AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Deploy a Lambda function (from app.py) that fetches and analyzes crypto news,
  then sends an SES alert if the sentiment indicates a market drop.

Parameters:
  NewsApiKeyParam:
    Type: String
    Description: 'Your NewsAPI.org key'
    NoEcho: true

  OpenAiApiKeyParam:
    Type: String
    Description: 'Your OpenAI API key'
    NoEcho: true

  AlertEmailParam:
    Type: String
    Description: 'Email address to send market-drop alerts'

  CryptoNameParam:
    Type: String
    Description: 'Name of the cryptocurrency to monitor'
    Default: 'Bitcoin'

Resources:
  ##########################################
  # Lambda Function
  ##########################################
  CryptoNewsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CryptoNewsAlertLambda
      Description: Fetches crypto news and sends alert if negative sentiment is detected
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      CodeUri: src
      Timeout: 60  # Adjust as needed
      Environment:
        Variables:
          NEWS_API_KEY: !Ref NewsApiKeyParam
          OPENAI_API_KEY: !Ref OpenAiApiKeyParam
          ALERT_EMAIL: !Ref AlertEmailParam
          CRYPTO_NAME: !Ref CryptoNameParam
      Policies:
        # SAM will create a role with these managed policies:
        - AWSLambdaBasicExecutionRole     # Allows writing logs to CloudWatch
        - AmazonSESFullAccess             # Allows sending email via SES
        # Add more policies if needed (e.g. S3, DynamoDB, etc.)

      Events:
        # Schedule event to run once a day (adjust 'rate' as needed)
        DailyTrigger:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
  
  ##########################################
  # CloudWatch Alarms
  ##########################################
  LambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: CryptoNewsLambda-Error-Alarm
      AlarmDescription: Alarm for Lambda function errors.
      Namespace: AWS/Lambda
      MetricName: Errors
      Dimensions:
        - Name: FunctionName
          Value: !Ref CryptoNewsLambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:CryptoAlerts" # Update SNS topic if required

  LambdaInvocationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: CryptoNewsLambda-Invocation-Alarm
      AlarmDescription: Alarm for Lambda function invocation count exceeding the threshold.
      Namespace: AWS/Lambda
      MetricName: Invocations
      Dimensions:
        - Name: FunctionName
          Value: !Ref CryptoNewsLambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 100
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:CryptoAlerts" # Update SNS topic if required

Outputs:
  LambdaFunctionName:
    Description: 'Name of the deployed Lambda function'
    Value: !Ref CryptoNewsLambda

  LambdaFunctionArn:
    Description: 'ARN of the deployed Lambda function'
    Value: !GetAtt CryptoNewsLambda.Arn
